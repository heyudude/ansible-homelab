---
- name: traefik - load cert vars
  include_vars: ../../cert.yml
  tags: traefik

- name: traefik - create dir
  file:
    path: "{{ app_path }}/traefik/certs"
    state: directory
    recurse: yes
  tags: traefik

- name: traefik - copy certificate
  copy:
    content: "{{ ssl_certificate }}"
    dest: "{{ app_path }}/traefik/certs/devmem.ru.crt"
  notify: traefik - restart
  tags: traefik

- name: traefik - copy private key
  copy:
    content: "{{ ssl_private_key }}"
    dest: "{{ app_path }}/traefik/certs/devmem.ru.key"
  notify: traefik - restart
  no_log: true
  tags: traefik

- name: traefik - copy config
  copy:
    src: files/traefik-dyn.toml
    dest: "{{ app_path }}/traefik"
  notify: traefik - restart
  tags: traefik

- name: traefik - start
  docker_container:
    name: traefik
    image: traefik:2.2
    pull: yes
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "{{ app_path }}/traefik/traefik-dyn.toml:/etc/traefik/traefik-dyn.toml"
      - "{{ app_path }}/traefik/certs:/certs"
    networks:
      - name: traefik
    networks_cli_compatible: yes
    command: >
      --log.level=ERROR
      --api=true
      --providers.file.filename=/etc/traefik/traefik-dyn.toml
      --providers.docker=true
      --providers.docker.exposedbydefault=false
      --entrypoints.web.address=:80
      --entrypoints.web.http.redirections.entryPoint.to=websecure
      --entrypoints.web.http.redirections.entryPoint.scheme=https
      --entrypoints.websecure.address=:443
      --serverstransport.insecureskipverify=true
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: "HostRegexp(`traefik-{{ inventory_hostname }}{fqdn:(.home.devmem.ru)?}`)"
      traefik.http.routers.traefik.service: "api@internal"
      traefik.http.routers.traefik.entrypoints: "websecure"
      traefik.http.routers.traefik.tls: "true"
    restart_policy: unless-stopped
    state: started
  register: traefik_start
  tags: traefik
