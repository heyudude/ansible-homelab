---
- name: jackett - create dir
  file:
    path: "{{ app_path }}/jackett"
    state: directory
    recurse: yes
  tags: jackett

- name: jackett - copy files
  copy:
    src: "files/{{ item }}"
    dest: "{{ app_path }}/jackett"
    mode: 0644
    directory_mode: 0755
  loop:
    - Definitions
    - openssl.cnf
  notify: jackett - restart
  tags: jackett

- name: jackett - start
  docker_container:
    name: jackett
    image: "{{ jackett_image }}"
    pull: yes
    env:
      PUID: "{{ puid }}"
      PGID: "{{ pgid }}"
      TZ: "{{ tz }}"
    volumes:
      - "{{ app_path }}/jackett/config:/config"
      - "{{ app_path }}/data/downloads:/downloads"
      - "{{ app_path }}/jackett/Definitions/eniahd.yml:/app/Jackett/Definitions/eniahd.yml:ro"
      - "{{ app_path }}/jackett/Definitions/nntt.yml:/app/Jackett/Definitions/nntt.yml:ro"
      - "{{ app_path }}/jackett/Definitions/piratbitl.yml:/app/Jackett/Definitions/piratbitl.yml:ro"
      - "{{ app_path }}/jackett/Definitions/riperam.yml:/app/Jackett/Definitions/riperam.yml:ro"
      - "{{ app_path }}/jackett/Definitions/rus-media.yml:/app/Jackett/Definitions/rus-media.yml:ro"
      - "{{ app_path }}/jackett/Definitions/selezen.yml:/app/Jackett/Definitions/selezen.yml:ro"
      - "{{ app_path }}/jackett/openssl.cnf:/etc/ssl/openssl.cnf:ro"
    networks:
      - name: "{{ app_network_name }}"
    networks_cli_compatible: yes
    labels:
      traefik.enable: "true"
      traefik.http.routers.jackett.rule: "HostRegexp(`jackett{fqdn:(.{{ inventory__homelab_domain }})?}`)"
      traefik.http.services.jackett.loadbalancer.server.port: "9117"
      traefik.http.routers.jackett.entrypoints: "websecure"
      traefik.http.routers.jackett.tls: "true"
    restart_policy: unless-stopped
    state: started
  register: jackett_start
  tags: jackett
