---
- name: autodiscover - start
  docker_container:
    name: autodiscover
    image: "{{ mail_autodiscover_image }}"
    pull: yes
    hostname: autodiscover
    domainname: "{{ mail_domainname }}"
    ports:
      - "8000:8000"
    env:
      COMPANY_NAME: "{{ mail_domainname }}"
      SUPPORT_URL: "https://autodiscover.{{ mail_domainname }}"
      DOMAIN: "{{ mail_domainname }}"
      IMAP_HOST: "imap.{{ mail_domainname }}"
      IMAP_PORT: "993"
      IMAP_SOCKET: "SSL"
      SMTP_HOST: "smtp.{{ mail_domainname }}"
      SMTP_PORT: "587"
      SMTP_SOCKET: "STARTTLS"
      PROFILE_IDENTIFIER: "ru.devmem.autodiscover"
      PROFILE_UUID: "92943D26-CAB3-4086-897D-DC6C0D8B1E86"
      MAIL_UUID: "7A981A9E-D5D0-4EF8-87FE-39FD6A506FAC"
    restart_policy: unless-stopped
    state: started
  tags: mail

- name: mail - create dir
  file:
    path: "{{ mail_cert_path_host }}"
    state: directory
    recurse: yes
  tags: mail

- name: mail - load certificate vars
  include_vars: ../traefik/vars/cert.vault.yml
  tags: mail

- name: mail - copy certificate
  copy:
    content: "{{ ssl_certificate }}"
    dest: "{{ mail_cert_path_host }}/{{ mail_cert_name }}.crt"
  notify: mail - restart
  tags: mail

- name: mail - copy certificate private key
  copy:
    content: "{{ ssl_private_key }}"
    dest: "{{ mail_cert_path_host }}/{{ mail_cert_name }}.key"
  notify: mail - restart
  no_log: true
  tags: mail

- name: mail - copy files
  template:
    src: templates/env-mailserver.j2
    dest: "{{ app_path }}/mail/env-mailserver"
  tags: mail

- name: mail - start
  docker_container:
    name: mail
    image: "{{ mail_image }}"
    pull: yes
    hostname: "{{ mail_hostname }}"
    domainname: "{{ mail_domainname }}"
    ports:
      - "25:25"
      - "143:143"
      - "587:587"
      - "993:993"
    env_file: "{{ app_path }}/mail/env-mailserver"
    env:
      DMS_DEBUG: "0"
      SSL_TYPE: "manual"
      SSL_CERT_PATH: "{{ mail_cert_path }}/{{ mail_cert_name }}.crt"
      SSL_KEY_PATH: "{{ mail_cert_path }}/{{ mail_cert_name }}.key"
      DOVECOT_PASS_ATTRS: "{{ mail_dovecot_pass_attrs }}"
      DOVECOT_USER_ATTRS: "{{ mail_dovecot_user_attrs }}"
      DOVECOT_AUTH_BIND: "yes"
    volumes:
      - "{{ app_path }}/mail/data:/var/mail"
      - "{{ app_path }}/mail/state:/var/mail-state"
      - "{{ app_path }}/mail/log:/var/log/mail"
      - "{{ mail_config_path_host }}/:/tmp/docker-mailserver/"
      - "{{ app_path }}/mail/certs:{{ mail_cert_path }}:ro"
    capabilities:
      - net_admin
      - sys_ptrace
    restart_policy: unless-stopped
    state: started
  register: mail_start
  no_log: true
  tags: mail

- name: mail - customize
  command: docker exec mail sh -c '{{ item }}'
  changed_when: true
  when: mail_start.changed  # noqa 503
  notify: mail - restart
  loop:
    - echo "TLS_REQCERT allow" >> /etc/ldap/ldap.conf
    - echo "auth_bind = yes" >> /etc/dovecot/dovecot-ldap.conf.ext
  tags: mail

- name: mail - generate dkim
  command: docker exec mail sh -c 'generate-dkim-domain {{ mail_domainname }}'
  register: dkim_result
  changed_when: '"Creating DKIM private key" in dkim_result.stdout'
  notify: mail - restart
  tags: mail

- block:
    - name: mail - get dkim key
      command: cat {{ mail_config_path_host }}/opendkim/keys/{{ mail_domainname }}/mail.txt
      register: dkim_key
      changed_when: no
      tags: mail

    - name: mail - print dkim key
      debug:
        var: dkim_key.stdout_lines
      tags: mail
  when: dkim_result.changed

- name: mail - configure freeipa
  include_tasks: ../mgmt/tasks/freeipa_service_bind.yml
  vars:
    freeipa_service_bind_sysaccount_dn: "{{ mail_ldap_bind_dn }}"
    freeipa_service_bind_sysaccount_pass: "{{ mail_ldap_bind_pw }}"
    freeipa_service_bind_group_name: "{{ mail_ldap_access_group }}"
  args:
    apply:
      tags: mail
  tags: mail
