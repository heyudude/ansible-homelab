---
- hosts: spsrv
  gather_facts: no

  vars:
    resource_type: vm
    vmid: 111
    hostname: gw-wg
    comment: PIA WireGuard
    net_ip: 192.168.13.2
    cores: 1
    mem: 512
    disk_size: 5
    vm_other_options: >
      --onboot 1

  roles:
    - { role: pve_manager }
    - { role: portainer_api }


- hosts: gw-wg
  gather_facts: yes

  vars:
    sshd_permit_root_login: "no"
    sshd_authorized_keys_user: ubuntu
    wg_pia_name: wg-pia
    wg_pia_image: thrnz/docker-wireguard-pia:latest
    wg_pia_user: "{{ inventory__piavpn_user }}"
    wg_pia_pass: "{{ inventory__piavpn_pass }}"
    wg_pia_location: swiss
    wg_pia_local_network: 192.168.0.0/16
    wg_pia_firewall: "1"
    wg_pia_fwd_iface: eth0

  pre_tasks:
    - name: Wait for cloud-init to finish
      wait_for:
        path: /var/lib/cloud/instance/boot-finished

  roles:
    - { role: common/packages, become: true }
    - { role: spirkaa.zsh_prezto }
    - { role: spirkaa.nano }
    - { role: common/sshd, become: true }
    - { role: common/wireguard, become: true }
    # - { role: common/docker, become: true }

  tasks:
    - name: Flush handlers
      meta: flush_handlers

    - name: Set sysctl entry
      sysctl:
        name: net.ipv4.conf.all.src_valid_mark
        value: "1"
        sysctl_set: yes
        reload: yes
        state: present
      become: true

    - name: Start {{ wg_pia_name }} container
      docker_container:
        name: "{{ wg_pia_name }}"
        image: "{{ wg_pia_image }}"
        pull: yes
        env:
          LOC: "{{ wg_pia_location }}"
          USER: "{{ wg_pia_user }}"
          PASS: "{{ wg_pia_pass }}"
          LOCAL_NETWORK: "{{ wg_pia_local_network }}"
          FIREWALL: "{{ wg_pia_firewall }}"
          FWD_IFACE: "{{ wg_pia_fwd_iface }}"
        volumes:
          - "pia:/pia"
          - "pia-shared:/pia-shared"
        capabilities:
          - net_admin
        network_mode: host
        healthcheck:
          test: ["CMD-SHELL", "curl -fsS --retry 3 {{ inventory__healthchecksio_url }}/wg-pia || exit 1"]
          interval: 60s
          timeout: 20s
          retries: 1
        restart_policy: unless-stopped
        state: started
      no_log: true
      become: true
